name: PHP Static Analysis & Tests

on:
  push:
    branches: [ develop, 'issue/592' ]
  pull_request:
    branches: [ develop ]

jobs:
  provide_php_versions_json:
    runs-on: ubuntu-20.04

    steps:
      # git clone + use PHP + composer install
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0

      - uses: "ramsey/composer-install@v1"

      # to see the output
      - run: vendor/bin/easy-ci php-versions-json

      # here we create the json, we need the "id:" so we can use it in "outputs" bellow
      -
        id: output_data
        run: echo "::set-output name=matrix::$(vendor/bin/easy-ci php-versions-json)"

    # here, we save the result of this 1st phase to the "outputs"
    outputs:
        matrix: ${{ steps.output_data.outputs.matrix }}

  static-analysis:
    name: Static Analysis PHP ${{ matrix.php-versions }}
    runs-on: ${{ matrix.operating-system }}
    needs: provide_php_versions_json
    strategy:
      matrix:
        operating-system: ['ubuntu-20.04']
        php-versions: ${{ fromJson(needs.provide_php_versions_json.outputs.matrix) }}

    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        coverage: none

    - uses: actions/checkout@v2

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache Files
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.composer-cache.outputs.dir }}
          **/.php_cs.cache
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Run static analysis
      run: composer run static-analysis

  phpunit:
    name: PHP ${{ matrix.php-versions }} Unit Tests
    runs-on: ${{ matrix.operating-system }}
    needs: provide_php_versions_json
    strategy:
      matrix:
        operating-system: ['ubuntu-20.04']
        php-versions: ${{ fromJson(needs.provide_php_versions_json.outputs.matrix) }}

    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        coverage: none

    - uses: actions/checkout@v2

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache Files
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.composer-cache.outputs.dir }}
          **/.php_cs.cache
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Run tests
      run: ./vendor/bin/phpunit --testdox --stop-on-failure

  coverage:
    name: Coverage
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: ['ubuntu-20.04']
        php-versions: ['8.0']

    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        coverage: xdebug

    - uses: actions/checkout@v2

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Get Composer Cache Directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache Files
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.composer-cache.outputs.dir }}
          **/.php_cs.cache
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Run tests
      uses: paambaati/codeclimate-action@v2.7.2
      env:
        CC_TEST_REPORTER_ID: "945dfb58a832d233a3caeb84e3e6d3be212e8c7abcb48117fce63b9adcb43647"
      with:
        coverageCommand: ./vendor/bin/phpunit --testdox --stop-on-failure --coverage-clover=clover.xml
